openapi: 3.0.3
info:
  title: delphi (donation web site backend)
  version: '1.0.0'
  contact:
    name: API support
    url: https://support.tm.io
    email: info@verity.team
  license:
    name: GNU Affero General Public License v3 (AGPL-3.0)
    url: https://www.gnu.org/licenses/agpl-3.0.en.html
  description: |
    The delphi backend provides all the functions needed by the donation web
    site.

servers:
- url: https://api.tm.io/delphi/v1
  description: delphi (donation web site backend)

paths:
  /wallet/connection:
    post:
      summary: associate a wallet address with an affiliate code
      description: |
         Call this endpoint to associate a wallet address with an
         affiliate code
      operationId: connectWallet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/connection_request'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_data_result'
        "400":
          description: |
            Bad input parameter; error message provides details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "401":
          description: |
            Client lacks valid authentication credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "404":
          description: no data found for address
        "5XX":
          description: |
            Servers are not working as expected. The request is probably valid
            but needs to be retried later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /donation/data:
    get:
      summary: get general donation data
      description: |
         get the prices and the funds accumulated so far
      operationId: donationData
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/donation_data'
        "400":
          description: |
            Bad input parameter; error message provides details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "401":
          description: |
            Client lacks valid authentication credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "5XX":
          description: |
            Servers are not working as expected. The request is probably valid
            but needs to be retried later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /user/data/{address}:
    get:
      summary: get the donation data for the wallet address in question
      parameters:
        - in: path
          name: address
          required: true
          schema:
            type: string
            maxLength: 42
          description: |
            The wallet address for which to obtain data
          example: "0xDEd1Fe6B3f61c8F1d874bb86F086D10FFc3F0154"
      description: |
         get the donation data for the wallet address in question
      operationId: userData
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user_data_result'
        "400":
          description: |
            Bad input parameter; error message provides details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "401":
          description: |
            Client lacks valid authentication credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "404":
          description: no data found for address
        "5XX":
          description: |
            Servers are not working as expected. The request is probably valid
            but needs to be retried later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /live:
    get:
      summary: is the service alive?
      description: is the service alive?
      operationId: alive
      responses:
        "200":
          description: OK
  /ready:
    get:
      summary: is the service alive and ready to do work?
      description: is the service alive and ready to do work?
      operationId: ready
      responses:
        "200":
          description: OK
        "503":
          description: something's wrong
  /affiliate/code:
    post:
      summary: generate new affiliate code
      description: |
         Call this endpoint to generate a new affiliate code
      parameters:
      - $ref: '#/components/parameters/delphi_key'
      - $ref: '#/components/parameters/delphi_ts'
      - $ref: '#/components/parameters/delphi_signature'
      operationId: generateCode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/affiliate_code'
        "400":
          description: |
            Bad input parameter; error message provides details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "401":
          description: |
            Client lacks valid authentication credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
        "5XX":
          description: |
            Servers are not working as expected. The request is probably valid
            but needs to be retried later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
components:
  schemas:
    error:
      required:
      - code
      - message
      properties:
        code:
          type: integer
          description: error code
          example: 115
        message:
          type: string
          maxLength: 128
          description: error message
          example: all your bytes are wrong
    donation_data:
      required:
      - prices
      - stats
      - receiving_address
      - status
      properties:
        prices:
          type: array
          description: an array of prices
          items:
            $ref: '#/components/schemas/price'
        stats:
          $ref: '#/components/schemas/donation_stats'
        receiving_address:
          type: string
          maxLength: 42
          description: receiving address for donations
          example: "0xDEd1Fe6B3f61c8F1d874bb86F086D10FFc3F0154"
        status:
          type: string
          enum: [open, paused, closed]
          example: "open"
          maxLength: 8
    user_data_result:
      required:
      - donations
      - user_data
      properties:
        donations:
          type: array
          description: an array of donations
          items:
            $ref: '#/components/schemas/donation'
        user_data:
          $ref: '#/components/schemas/user_data'
    donation:
      required:
      - amount
      - asset
      - tokens
      - price
      - tx_hash
      - status
      - ts
      properties:
        amount:
          description: amount donated
          type: string
          example: "1.23"
          maxLength: 16
          x-oapi-codegen-extra-tags:
            db: amount
        usd_amount:
          description: optional USD amount, omitted in case of USD stable coins
          type: string
          example: "2009.82"
          maxLength: 16
          x-oapi-codegen-extra-tags:
            db: usd_amount
        asset:
          description: asset donated
          type: string
          enum: [eth, usdt, usdc]
          example: "eth"
          maxLength: 8
          x-oapi-codegen-extra-tags:
            db: asset
        tokens:
          description: amount of tokens corresponding to the donated amount
          type: string
          example: "980000"
          maxLength: 16
          x-oapi-codegen-extra-tags:
            db: tokens
        price:
          description: token price at the time of donation
          type: string
          example: "0.002"
          maxLength: 16
          x-oapi-codegen-extra-tags:
            db: price
        tx_hash:
          description: transaction hash for the donation in question
          type: string
          example: "0x558c8b86f75b0149ddca028a44a302eebe47c032e8ca8834f07aa6f1c5ae3fac"
          maxLength: 66
          x-oapi-codegen-extra-tags:
            db: tx_hash
        status:
          description: ethereum blockchain status of the donation
          type: string
          enum: [unconfirmed, confirmed, failed]
          example: "unconfirmed"
          maxLength: 16
          x-oapi-codegen-extra-tags:
            db: status
        ts:
          type: string
          format: date-time
          example: "2023-10-06T12:52:10+00:00"
          maxLength: 32
          x-oapi-codegen-extra-tags:
            db: block_time
    price:
      required:
      - asset
      - price
      - ts
      properties:
        asset:
          type: string
          enum: [eth, truth]
          example: "eth"
          maxLength: 8
          x-oapi-codegen-extra-tags:
            db: asset
        price:
          description: asset price in USD
          type: string
          example: "1633.89"
          maxLength: 16
          x-oapi-codegen-extra-tags:
            db: price
        ts:
          type: string
          format: date-time
          example: "2023-10-05T11:56:10+00:00"
          maxLength: 32
          x-oapi-codegen-extra-tags:
            db: created_at
    donation_stats:
      required:
      - total
      - tokens
      properties:
        total:
          description: total funds raised in USD
          type: string
          example: "1980000"
          maxLength: 16
          x-oapi-codegen-extra-tags:
            db: total
        tokens:
          description: number of tokens claimable by donors
          type: string
          example: "979999"
          maxLength: 16
          x-oapi-codegen-extra-tags:
            db: tokens
    user_data:
      required:
      - total
      - tokens
      - staked
      - reward
      - status
      properties:
        total:
          description: total funds donated by this address in USD
          type: string
          example: "31415"
          maxLength: 16
          x-oapi-codegen-extra-tags:
            db: us_total
        tokens:
          description: number of tokens the user is eligible to claim
          type: string
          example: "9880000"
          maxLength: 16
          x-oapi-codegen-extra-tags:
            db: us_tokens
        staked:
          description: number of tokens the user staked; must be <= `tokens`
          type: string
          example: "979999"
          maxLength: 16
          x-oapi-codegen-extra-tags:
            db: us_staked
        reward:
          description: staking rewards the user is eligible to claim
          type: string
          example: "979"
          maxLength: 16
          x-oapi-codegen-extra-tags:
            db: us_reward
        status:
          type: string
          enum: [none, staking, unstaking]
          example: "staking"
          maxLength: 16
          x-oapi-codegen-extra-tags:
            db: us_status
        ts:
          description: date/time at which the staking status was last modified
          type: string
          format: date-time
          example: "2023-10-05T09:23:10+00:00"
          maxLength: 32
          x-oapi-codegen-extra-tags:
            db: us_modified_at
        affiliate_code:
          type: string
          maxLength: 16
          description: |
            affiliate code generated for this wallet address
          example: "GezIkgeubrOkiOv4"
          x-oapi-codegen-extra-tags:
            db: us_code
    connection_request:
      required:
      - code
      - address
      properties:
        code:
          description: affiliate code, pass `none` if there's no code in the URL
          type: string
          example: "none"
          maxLength: 16
          x-oapi-codegen-extra-tags:
            db: code
        address:
          description: address of the wallet that connected
          type: string
          example: "0xDEd1Fe6B3f61c8F1d874bb86F086D10FFc3F0154"
          maxLength: 42
          x-oapi-codegen-extra-tags:
            db: address
    affiliate_code:
      required:
      - address
      - code
      - ts
      properties:
        address:
          description: address of the wallet that requested the affiliate code
          type: string
          example: "0xDEd1Fe6B3f61c8F1d874bb86F086D10FFc3F0154"
          maxLength: 42
          x-oapi-codegen-extra-tags:
            db: address
        code:
          type: string
          maxLength: 16
          description: |
            affiliate code generated for the requesting wallet address
          example: "GezIkgeubrOkiOv4"
          x-oapi-codegen-extra-tags:
            db: code
        ts:
          description: date/time at which the affiliate code was added
          type: string
          format: date-time
          example: "2023-10-05T09:23:10+00:00"
          maxLength: 32
          x-oapi-codegen-extra-tags:
            db: created_at
  parameters:
    delphi_key:
      in: header
      name: delphi-key
      schema:
        type: string
      required: true
      description: a key/address (public)
      example: "0xDEd1Fe6B3f61c8F1d874bb86F086D10FFc3F0154"
    delphi_signature:
      in: header
      name: delphi-signature
      schema:
        type: string
      required: true
      description: signature over the path, timestamp and body
    delphi_ts:
      in: header
      name: delphi-ts
      schema:
        type: string
      required: true
      description: |
        caller timestamp (number of milliseconds since Unix epoch) -- included
        to prevent replay attacks; must not be older than 5 seconds
      example: 1697787627315
